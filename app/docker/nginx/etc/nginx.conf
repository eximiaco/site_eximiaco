
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile              on;
    client_max_body_size  13m;
    keepalive_timeout     3;

    gzip  on;

    # Upstream to abstract backend connection(s) for PHP.
    upstream php {
        server wordpress:9000;
    }

	map $uri $blogname{
		~^(?P<blogpath>/[^/]+/)files/(.*)       $blogpath ;
	}

	map $blogname $blogid{
		default -999;

		#Ref: http://wordpress.org/extend/plugins/nginx-helper/
		#include /var/www/wordpress/wp-content/plugins/nginx-helper/map.conf ;
	}

    server {
        listen 80;
        server_name _;

        charset utf-8;

        root /var/www/html/web;
        index index.php;

		 location ~ ^(/[^/]+/)?files/(.+) {
			try_files /wp-content/blogs.dir/$blogid/files/$2 /wp-includes/ms-files.php?file=$2 ;
			access_log off;     log_not_found off; expires max;
		}

		#avoid php readfile()
		location ^~ /blogs.dir {
			internal;
			alias /var/www/example.com/htdocs/wp-content/blogs.dir ;
			access_log off;     log_not_found off; expires max;
		}

		if (!-e $request_filename) {
			rewrite /wp-admin$ $scheme://$host$uri/ permanent;
			rewrite ^(/[^/]+)?(/wp-.*) $2 last;
			rewrite ^(/[^/]+)?(/.*\.php) $2 last;
		}

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
            try_files       $fastcgi_script_name =404;
            fastcgi_pass    wordpress:9000;
            fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include         fastcgi_params;
        }

		location ~ ^/wp-content/uploads/(.*\.(png|jpg|jpeg|gif))$ {
            try_files $uri @prodfallback;
        }

        location @prodfallback {
            return 301 https://www.eximia.co/wp-content/uploads/$1;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            log_not_found off;
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            expires off;
        }

		# Tenta carregar imagem no servidor de produção caso não tenha ela em
        # localhost

		# fim do carregamento em servidor

        location ~ /\.ht {
            deny  all;
        }
    }
}
